"""empty message

Revision ID: b198309a10fb
Revises: 123bdf908429
Create Date: 2025-09-26 22:08:00.997426

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa
import sqlmodel.sql.sqltypes
import geoalchemy2
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision: str = 'b198309a10fb'
down_revision: Union[str, Sequence[str], None] = '123bdf908429'
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    """Upgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_index(op.f('ix_veiculos_motoristas_id'), table_name='veiculos_motoristas')
    op.drop_table('veiculos_motoristas')
    # ### end Alembic commands ###


def downgrade() -> None:
    """Downgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('veiculos_motoristas',
    sa.Column('motorista_id', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.Column('crlv', sa.VARCHAR(length=1000), autoincrement=False, nullable=True),
    sa.Column('placa', sa.VARCHAR(length=10), autoincrement=False, nullable=True),
    sa.Column('cor', sa.VARCHAR(length=20), autoincrement=False, nullable=True),
    sa.Column('is_active', sa.BOOLEAN(), autoincrement=False, nullable=False),
    sa.Column('created_at', postgresql.TIMESTAMP(timezone=True), autoincrement=False, nullable=False),
    sa.Column('updated_at', postgresql.TIMESTAMP(timezone=True), autoincrement=False, nullable=True),
    sa.Column('deleted_at', postgresql.TIMESTAMP(timezone=True), autoincrement=False, nullable=True),
    sa.Column('created_by', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('updated_by', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('deleted_by', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('crlv_arquivo', sa.VARCHAR(length=1000), autoincrement=False, nullable=True),
    sa.Column('foto_carro', sa.VARCHAR(length=100), autoincrement=False, nullable=True),
    sa.Column('id', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.ForeignKeyConstraint(['motorista_id'], ['users.id'], name=op.f('veiculos_motoristas_motorista_id_fkey'))
    )
    op.create_index(op.f('ix_veiculos_motoristas_id'), 'veiculos_motoristas', ['id'], unique=False)
    # ### end Alembic commands ###
